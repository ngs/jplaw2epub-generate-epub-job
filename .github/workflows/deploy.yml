name: Deploy to Cloud Run

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      deploy_method:
        description: "Deployment method"
        required: false
        default: "source"
        type: choice
        options:
          - source
          - artifact-registry
          - cloud-build

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: asia-northeast1
  JOB_NAME: epub-generator
  REPOSITORY: cloud-run-source-deploy
  BUCKET_NAME: jplaw2epub-epub-storage

jobs:
  deploy:
    name: Deploy to Cloud Run Job
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      # Deploy from source
      - name: Deploy from source
        if: github.event.inputs.deploy_method == 'source' || github.event.inputs.deploy_method == ''
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ${{ env.JOB_NAME }}
          region: ${{ env.REGION }}
          source: ./
          env_vars: |
            EPUB_BUCKET_NAME=${{ env.BUCKET_NAME }}
          flags: |
            --parallelism=5
            --max-retries=2
            --task-timeout=3600
            --cpu=2
            --memory=1Gi
            --service-account=${{ secrets.WIF_SERVICE_ACCOUNT }}

      # Deploy from Artifact Registry
      - name: Configure Docker for Artifact Registry
        if: github.event.inputs.deploy_method == 'artifact-registry'
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository (if not exists)
        if: github.event.inputs.deploy_method == 'artifact-registry'
        run: |
          gcloud artifacts repositories describe ${{ env.REPOSITORY }} \
            --location=${{ env.REGION }} || \
          gcloud artifacts repositories create ${{ env.REPOSITORY }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="Docker repository for EPUB generator job"

      - name: Build and Push Docker image
        if: github.event.inputs.deploy_method == 'artifact-registry'
        run: |
          IMAGE_NAME="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.JOB_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Deploy from Artifact Registry
        if: github.event.inputs.deploy_method == 'artifact-registry'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ${{ env.JOB_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.IMAGE_NAME }}
          env_vars: |
            EPUB_BUCKET_NAME=${{ env.BUCKET_NAME }}
          flags: |
            --parallelism=5
            --max-retries=2
            --task-timeout=3600
            --cpu=2
            --memory=1Gi
            --service-account=${{ secrets.WIF_SERVICE_ACCOUNT }}

      # Deploy using Cloud Build
      - name: Deploy using Cloud Build
        if: github.event.inputs.deploy_method == 'cloud-build'
        run: |
          gcloud builds submit \
            --tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.JOB_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }}

          gcloud run jobs deploy ${{ env.JOB_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.JOB_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --parallelism 5 \
            --task-count 1 \
            --max-retries 2 \
            --task-timeout 3600 \
            --cpu 2 \
            --memory 1Gi \
            --set-env-vars="EPUB_BUCKET_NAME=${{ env.BUCKET_NAME }}" \
            --service-account=${{ secrets.WIF_SERVICE_ACCOUNT }}

      # Test job execution
      - name: Test job execution
        run: |
          echo "Testing job execution..."
          gcloud run jobs execute ${{ env.JOB_NAME }} \
            --region ${{ env.REGION }} \
            --wait \
            --args="--revision-id,406CO0000000342_20050401_417CO0000000140,--version,ci-test" || echo "Test execution completed with status: $?"
